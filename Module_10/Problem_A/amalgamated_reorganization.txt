Have you noticed that sometimes when English movies are translated into Spanish from Spain 
(and sometimes even into Latin American Spanish), the meaning of the dialogues is significantly changed?
 Worse still, sometimes the titles are given translations that might relate to the movie's plot but have 
 no connection with the original title.

To mention just two examples, the three-time Oscar-winning movie "Brokeback Mountain" was translated in 
Spain as "En terreno vedado" ("In Forbidden Terrain"), while one of Bill Murray's most famous movies, 
"Groundhog Day," was translated as "Atrapado en el tiempo" ("Trapped in Time").

Well, if something similar happened with sorting algorithms, it wouldn't be surprising if MergeSort 
ended up with a translation like "Reorganizaci√≥n amalgamada" ("Amalgamated Reorganization").

This exercise essentially consists of implementing MergeSort. However, since sorting a dataset cannot 
be the output (because any sorting algorithm would give the same result), the idea is as follows: 
given an array composed exclusively of elements that are digits, display its recombination phase in 
the form of a binary tree in post-order traversal, separating each node by a line break.

For example, if the original array to be sorted is {5, 1, 8, 3, 7, 6, 2, 4}, the output should correspond 
to the figure presented previously, and by concatenating the elements of each subarray, the result would be:

5
1
15
8
3
38
1358
7
6
67
2
4
24
2467
12345678

Input
The first line of the input contains the number ùê∂ of test cases (no more than 100). Then, ùê∂ lines follow, 
each containing at least one, and at most 1024 digits, separated by a space.

Output
For each test case, the output must contain a line with the message (without quotes) "caso i:", where ùëñ 
is the corresponding case number, followed by the resulting tree as specified above. There should be a 
blank line between each case, and there must not be a blank line after the last case.

Example:
Input
4
1
2 1
3 2 1
5 1 8 3 7 6 2 4

Output
caso 1:
1

caso 2:
2
1
12

caso 3:
3
2
1
12
123

caso 4:
5
1
15
8
3
38
1358
7
6
67
2
4
24
2467
12345678