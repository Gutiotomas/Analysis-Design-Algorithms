Zoé is a fan of horror and suspense movies. During her vacation, she dedicated herself to binge-watching 
her favorite series like The Walking Dead, The Last of Us, Z Nation, Resident Evil, among others.

The problem is that during the nights, she started having a recurring dream: she is inside the world of 
these series and must escape from the zombies that want to infect her. To escape, she has to go from her hideout, 
identified with the number 0, to another hideout identified with the integer 𝐾. There are a total of 𝑁 hideouts, 
not counting the starting hideout 0. There is a series of connections between the hideouts. 
Each connection has a difficulty level expressed as a number: the higher the number, the higher the difficulty 
(not necessarily related to the distance) of moving from one hideout to another.

Knowing all the connections and their difficulties, could you help Zoé escape? 

Input
The input begins with a line containing two positive integer values separated by a space: 
𝑁 and 𝑀 (1 ≤ 𝑁 ≤ 4000; 0 ≤ 𝑀 ≤ 𝑁(𝑁+1)/2). Then follows a line containing a positive integer 𝑃, the number of 
possible destination hideouts (1 ≤ 𝑃 ≤ 𝑁+1). Then follow 𝑀 lines with three integer values separated by a space, 
where the first two correspond to the identifiers of the hideouts that are connected, and the third corresponds 
to the difficulty 𝐷 of moving between them (1 ≤ 𝐷 ≤ 1000). The connections are bidirectional (each connection will 
appear only once), and there may be circular connections (same origin and destination). Then follow 𝑃 lines, 
each with an integer value corresponding to the identifier 𝐾 of a possible destination.

Output
The output should contain 𝑃 lines, each with the minimum accumulated difficulty to reach the corresponding 
destination hideout. If the hideout is unreachable, the message (without quotes and in uppercase): 
"ZOMBI" should be displayed.

Example
Input:
5 8
5
0 1 7
0 2 5
0 3 2
0 4 6
1 4 1
4 3 3
3 2 4
2 1 3
2
3
4
5
1

Output:
5
2
5
ZOMBI
6